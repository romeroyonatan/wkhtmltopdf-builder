name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'wkhtmltopdf version to build'
        required: true
        default: '0.12.5'
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.arch.runner }}
    strategy:
      fail-fast: false
      matrix:
        arch:
          - platform: linux/amd64
            runner: ubuntu-24.04
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
    env:
      WKHTMLTOPDF_VERSION: ${{ inputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Prepare
        run: |
          platform=${{ matrix.arch.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" | tee -a $GITHUB_ENV
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.WKHTMLTOPDF_VERSION }}
          outputs: type=local,dest=dist
          platforms: ${{ matrix.arch.platform }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wkhtmltopdf-${{ env.PLATFORM_PAIR }}
          path: dist/
          if-no-files-found: error
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          'v${{ inputs.version }}'
          --repo '${{ github.repository }}'
          --notes "wkhtmltopdf ${{ inputs.version }} release"

      - name: Upload artifacts to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages
        run: >-
          gh release upload
          'v${{ inputs.version }}' dist/**
          --repo '${{ github.repository }}'
